@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using ProductInsight.Models
@model ManageModel
@{

    var curUser = new ApplicationUser();
    if (User.Identity.IsAuthenticated)
    {
        var userStore = new UserStore<ApplicationUser>(new ApplicationDbContext());
        var manager = new UserManager<ApplicationUser>(userStore);
        curUser = manager.FindById(User.Identity.GetUserId());
    }
    Layout = "~/Views/Portal/_Layout.cshtml";
}

    <div class="container-fluid">

    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Manage
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-dashboard"></i>  <a href='@Url.Action("Index","Portal")'>Dashboard</a>
                </li>
                <li class="active">
                    <i class="fa fa-edit"></i> Manage
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
    <!-- /.row -->
    <div class="row">
        <div class="col-lg-6">
          @using (Html.BeginForm("Manage", "Portal", FormMethod.Post, new { role = "form" }))
          {
                @Html.AntiForgeryToken()
                <b>@Html.ValidationSummary(true, "", new { @class = "text-success" })</b>

                 <div class="form-group">
                    @Html.LabelFor( m => m.Website )
                    @Html.TextBoxFor(m => m.Website, new { @class = "form-control", @placeholder = "Enter website URL" })
                    @Html.ValidationMessageFor(m => m.Website, "", new { @class = "text-danger" })
                    <p class="help-block">Website URL should be of the format 'domain-name.com'</p>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ServerIP)
                    @Html.TextBoxFor(m => m.ServerIP, new { @class = "form-control", @placeholder = "Enter IP address of server" })
                    @Html.ValidationMessageFor(m => m.ServerIP, "", new { @class = "text-danger" })
               </div>

                <div class="form-group">             
                    <input type="submit" value="Update" class="btn btn-primary" />                  
                </div>
          }
      </div>
     <!-- /.row -->
     <div class="col-lg-12">
         <div class="jumbotron" style="padding: 15px;">
             <p>
                 <h4>API Auth Token: </h4> 
                 <pre>@curUser.ApiToken</pre>
                 <h4>jQuery Review Post Code Snippet</h4>
            <pre>
    $.post( "@Request.Url.GetLeftPart(UriPartial.Authority)/Reviews/ReviewPost", { 
        userID:       , 
        reviewID:     , 
        productID:    , 
        upvotes: 0    , 
        downvotes: 0  , 
        reviewerText: , 
        rating:       , 
        AuthToken: "@curUser.ApiToken" 
    }, 
    function(data) { 	
	    // Process
    });
 </pre>
    <h4>jQuery Review Votes Code Snippet</h4>
    <pre>
    $.post( "@Request.Url.GetLeftPart(UriPartial.Authority)/Reviews/UpvotesDownvotes", { 
        reviewID:     , 
        productID:    , 
        productID:    , 
        upvotes: 1    , 
        downvotes: 0  , 
        AuthToken: "@curUser.ApiToken" 
    }, 
    function(data) { 	
	    // Process
    });
 </pre>
             </p>
         </div>
     </div>
        </div>
</div>
        <!-- /.container-fluid -->
